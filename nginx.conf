worker_processes  1;  # The instance is small, 1 process is enough.

error_log  /var/log/nginx/error.log info;  # Error log, level info or greater
pid        /var/run/nginx.pid;  # nginx process ID

events {
    worker_connections  1024;  # Max number of simultaneous connections.
}

http {
    # Access log: requests hitting your website.
    access_log         /var/log/nginx/access.log;

    # Let nginx infer content types automatically.
    include            /etc/nginx/mime.types;

    # "sendfile allows to transfer data from a file descriptor to another directly in kernel space.
    # sendfile allows to save lots of resources [when serving static files]"
    # Quoting https://thoughts.t37.net/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765#8e26
    sendfile           on;

    # Keep connection alive for no more than one minute
    keepalive_timeout  60s;

    # Automatically gzip the output, except for IE 6 clients (hopefully rare)
    gzip on;
    gzip_disable "msie6";

    # Set website's root
    root /home/ubuntu/simple-web-app;

    # Set gunicorn upstream
    upstream app_gunicorn {
        server 0.0.0.0:5000;
    }

    # Create a web server
    server {
        listen 80;  # Listen on HTTP port 80

        # Cache assets for 5 minutes.
        add_header Cache-Control max-age=300;

        # Configure 404 page.
        error_page 404 /404.html;

        location /app {
            include proxy_params;
            proxy_pass http://app_gunicorn;

	    }

        # Route / to static.html.
        location = / {
            try_files /static.html =404;
        }

        # For everything else, try to find a file matching the path or return a 404.
        location / {
            try_files $uri =404;
        }
    }
}